{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","personService.js","App.js","index.js"],"names":["Filter","filterNames","onChange","PersonForm","addName","handleNameChange","handleNumberChange","onSubmit","type","Persons","filteredName","persons","handleDelete","length","map","name","key","person","number","onClick","id","window","confirm","Notification","message","messageStyles","color","greenMessage","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","url","axios","get","newPerson","post","delete","newNumber","put","App","useState","setPersons","newName","setNewName","setNewNumber","setFilteredName","setMessage","messageColor","setMessageColor","useEffect","personService","then","res","data","personName","per","e","searchedName","target","value","toUpperCase","filtered","filter","includes","preventDefault","catch","err","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f842895.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ filterNames }) => {\r\n return (\r\n \t<div> \r\n \t\tfilter shown with  <input onChange={filterNames} />\r\n \t</div>\t\r\n );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({ addName, handleNameChange, handleNumberChange }) => {\r\n return (\r\n \t<div> \r\n \t\t<form onSubmit={addName}>\r\n        <div>\r\n          name: <input onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n \t</div>\t\r\n );\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({ filteredName, persons, handleDelete }) => {\r\n\tconst deletePrompt = (name, id) => {\r\n\t\tconst result = window.confirm(`Are you sure you want to delete ${name} ?`);\r\n\t\tresult && handleDelete(id);\r\n\t}\r\n return (\r\n \t<div> \r\n \t\t{filteredName.length > 0 ? (filteredName.map(name => <p key={name}>{name}</p>)\r\n        ) : (\r\n        persons.map(person => {\r\n        \treturn (\r\n        \t\t<p key={person.number}>\r\n                    <span>{person.name}{': '}{person.number}</span>\r\n\t        \t\t<button onClick={() => deletePrompt(person.name, person.id)}>Delete</button>\r\n        \t\t</p>\r\n        \t);\r\n        })\r\n        )\r\n      }\r\n \t</div>\t\r\n );\r\n}\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Notification = ({ message, greenMessage }) => {\r\n\tconst messageStyles = {\r\n\t  color: greenMessage ? ('green') :'red',\r\n\t  background: 'lightgrey',\r\n\t  fontSize: 20,\r\n\t  borderStyle: 'solid',\r\n\t  borderRadius: 5,\r\n\t  padding: 10,\r\n\t  marginBottom: 10,\r\n\t}\r\n\r\n\tif (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n  \t<div>\r\n  \t\t{message &&\r\n\t\t    <div style={messageStyles}>\r\n\t\t      {message}\r\n\t\t    </div>\r\n  \t\t}\r\n  \t</div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst url = '/api/persons';\r\n\r\nconst getAllPersons = () => {\r\n\treturn axios.get(url);\r\n}\r\n\r\nconst addNewPerson = (newPerson) => {\r\n\treturn axios.post(url, newPerson);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${url}/${id}`);\r\n}\r\n\r\nconst changeNumber = (id, newNumber) => {\r\n  return axios.put(`${url}/${id}`, newNumber);\r\n}\r\n\r\nexport default { getAllPersons , addNewPerson, deletePerson, changeNumber }","import React, { useState, useEffect } from 'react';\r\n\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport Notification from './components/Notification';\r\n\r\nimport personService from './personService';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]); \r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ filteredName, setFilteredName ] = useState('');\r\n  const [message , setMessage] = useState('');\r\n  const [messageColor , setMessageColor] = useState(null);\r\n  useEffect(() => {\r\n    personService.getAllPersons().then(res => setPersons(res.data))\r\n  }, [])\r\n\r\n  const personName = persons.map(per => per.name);\r\n\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id: persons.length + 1,\r\n    }\r\n\r\n    personName.includes(newName) ? (\r\n    \twindow\r\n    \t\t.confirm(\r\n    \t\t\t`${newName} is already added to phonebook, do you want to replace the old number with a new one ?`\r\n    \t\t) && persons.map(person =>  {\r\n    \t\t\t\t\t\t\tperson.name === newName &&\r\n    \t\t\t\t\t\t\t personService\r\n                    .changeNumber(person.id, {...newPerson, number: newNumber})\r\n                      .catch(err => {\r\n                        setMessage(`Opps information of ${newName} has already been removed from the server :(`);\r\n                        setTimeout(() => {setMessage(null)}, 5000);\r\n                        setMessageColor(null);                        \r\n                      })\r\n                   setMessage(`${newName} Successfully changed number to ${newNumber} `);\r\n                   setTimeout(() => {setMessage(null)}, 5000);\r\n                   setMessageColor(true);\r\n                  })\r\n      ) : (\r\n      personService.addNewPerson(newPerson).then(res => {\r\n        setPersons([...persons, res.data]);\r\n        setMessage(`Successfully added ${newName}`);\r\n        setTimeout(() => {setMessage(null)}, 5000);\r\n        setMessageColor(true);\r\n      })\r\n      );\r\n  }\r\n\r\n  const deleteName = id => {\r\n  \tpersonService.deletePerson(id);\r\n  }\r\n\r\n  const handleNameChange = e => {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n    const handleNumberChange = e => {\r\n    setNewNumber(e.target.value);\r\n  }\r\n\r\n  const filterNames = e => {\r\n    let searchedName = e.target.value.toUpperCase();\r\n    let filtered = personName.filter(name => name.toUpperCase().includes(searchedName));\r\n    setFilteredName(filtered);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} greenMessage={messageColor}/>\r\n      <Filter filterNames={filterNames} />   \r\n      <h2>Add a new </h2>\r\n      <PersonForm addName={addName} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filteredName={filteredName} handleDelete={deleteName} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}